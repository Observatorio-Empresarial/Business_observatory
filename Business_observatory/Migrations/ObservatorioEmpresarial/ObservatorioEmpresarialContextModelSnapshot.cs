// <auto-generated />
using System;
using Business_observatory.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Business_observatory.Migrations.ObservatorioEmpresarial
{
    [DbContext(typeof(ObservatorioEmpresarialContext))]
    partial class ObservatorioEmpresarialContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Business_observatory.Models.Download", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("DownloadDate")
                        .HasColumnType("date")
                        .HasColumnName("download_date");

                    b.Property<int?>("IdProject")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_project");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_user");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdProject" }, "id_project");

                    b.HasIndex(new[] { "IdUser" }, "id_user");

                    b.ToTable("downloads", (string)null);
                });

            modelBuilder.Entity("Business_observatory.Models.Enterprise", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_user");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nit");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.ToTable("enterprises", (string)null);
                });

            modelBuilder.Entity("Business_observatory.Models.Incharge", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_user");

                    b.Property<int>("IdEnterprise")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_enterprise");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdEnterprise" }, "id_enterprise");

                    b.ToTable("incharges", (string)null);
                });

            modelBuilder.Entity("Business_observatory.Models.Manager", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_user");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.ToTable("managers", (string)null);
                });

            modelBuilder.Entity("Business_observatory.Models.Project", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_project");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("creation_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("File")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("file");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'")
                        .IsFixedLength();

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("update_date");

                    b.HasKey("IdProject")
                        .HasName("PRIMARY");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("Business_observatory.Models.Student", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_user");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("student_code");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("Business_observatory.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id_user");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("address");

                    b.Property<string>("AspNetUserId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("creation_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("second_last_name");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'")
                        .IsFixedLength();

                    b.Property<string>("TypeUser")
                        .IsRequired()
                        .HasColumnType("enum('empresa','encargado','estudiante')")
                        .HasColumnName("type_user");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("update_date");

                    b.HasKey("IdUser")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AspNetUserId" }, "FK_AspNetUsers_Users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Business_observatory.Models.Download", b =>
                {
                    b.HasOne("Business_observatory.Models.Project", "IdProjectNavigation")
                        .WithMany("Downloads")
                        .HasForeignKey("IdProject")
                        .HasConstraintName("downloads_ibfk_2");

                    b.HasOne("Business_observatory.Models.User", "IdUserNavigation")
                        .WithMany("Downloads")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("downloads_ibfk_1");

                    b.Navigation("IdProjectNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Business_observatory.Models.Enterprise", b =>
                {
                    b.HasOne("Business_observatory.Models.User", "IdUserNavigation")
                        .WithOne("Enterprise")
                        .HasForeignKey("Business_observatory.Models.Enterprise", "IdUser")
                        .IsRequired()
                        .HasConstraintName("enterprises_ibfk_1");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Business_observatory.Models.Incharge", b =>
                {
                    b.HasOne("Business_observatory.Models.Enterprise", "IdEnterpriseNavigation")
                        .WithMany("Incharges")
                        .HasForeignKey("IdEnterprise")
                        .IsRequired()
                        .HasConstraintName("incharges_ibfk_2");

                    b.HasOne("Business_observatory.Models.User", "IdUserNavigation")
                        .WithOne("Incharge")
                        .HasForeignKey("Business_observatory.Models.Incharge", "IdUser")
                        .IsRequired()
                        .HasConstraintName("incharges_ibfk_1");

                    b.Navigation("IdEnterpriseNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Business_observatory.Models.Manager", b =>
                {
                    b.HasOne("Business_observatory.Models.User", "IdUserNavigation")
                        .WithOne("Manager")
                        .HasForeignKey("Business_observatory.Models.Manager", "IdUser")
                        .IsRequired()
                        .HasConstraintName("managers_ibfk_1");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Business_observatory.Models.Student", b =>
                {
                    b.HasOne("Business_observatory.Models.User", "IdUserNavigation")
                        .WithOne("Student")
                        .HasForeignKey("Business_observatory.Models.Student", "IdUser")
                        .IsRequired()
                        .HasConstraintName("students_ibfk_1");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Business_observatory.Models.Enterprise", b =>
                {
                    b.Navigation("Incharges");
                });

            modelBuilder.Entity("Business_observatory.Models.Project", b =>
                {
                    b.Navigation("Downloads");
                });

            modelBuilder.Entity("Business_observatory.Models.User", b =>
                {
                    b.Navigation("Downloads");

                    b.Navigation("Enterprise");

                    b.Navigation("Incharge");

                    b.Navigation("Manager");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
